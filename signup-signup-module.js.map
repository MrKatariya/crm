{"version":3,"sources":["./src/app/signup/signup-routing.module.ts","./src/app/signup/signup.module.ts","./src/app/signup/signup.component.ts","./src/app/signup/signup.component.html"],"names":[],"mappings":"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","file":"signup-signup-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { SignupComponent } from './signup.component';\n\nconst routes: Routes = [{ path: '', component: SignupComponent }];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SignupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SignupRoutingModule } from './signup-routing.module';\nimport { SignupComponent } from './signup.component';\nimport { AllModule } from \"../modules/all.module\";\n\n@NgModule({\n  declarations: [SignupComponent],\n  imports: [\n    CommonModule,\n    SignupRoutingModule,\n    AllModule\n  ]\n})\nexport class SignupModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, Validators } from \"@angular/forms\";\nimport { AuthService } from \"../services/auth.service\";\n\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n\n  constructor(private fb:FormBuilder, private auth:AuthService) { }\n\n  ngOnInit(): void {\n  }\n  private websiteRegExp:any=/^((https?|ftp|smtp):\\/\\/)?(www.)?[a-z0-9]+\\.[a-z]+(\\/[a-zA-Z0-9#]+\\/?)*$/;\n  public passwordType:string=\"password\";\n  public emailNotAccepted:boolean=false;\n  public emailAccepted:boolean=false;\n  public emailSignupForm=this.fb.group({\n    fullname:[''],\n    email:[''],\n    password:[''],\n    phone:[''],\n    website:['',[\n      Validators.required,\n      Validators.pattern(this.websiteRegExp)\n    ]]\n  });\n\n  get website():any{\n    return this.emailSignupForm.get(\"website\");\n  }\n\n  emailSignup():void{\n    this.auth.emailSignup(this.emailSignupForm.value);\n  }\n  togglePassword():void{\n    if(this.passwordType==\"password\")\n    {\n      this.passwordType=\"text\";\n    }\n    else\n    {\n      this.passwordType=\"password\";\n    }\n  }\n\n  isUserAlreadyExists(input:any):void{\n    const email=input.value;\n    const user=this.auth.isUserAlreadyExists(email);\n    user.then((response:any)=>{\n      if(response.length !=0)\n      {\n        this.emailSignupForm.get(\"email\").setErrors({\n          invalid:true\n        });\n        this.emailNotAccepted=true;\n        this.emailAccepted=false;\n      }\n      else\n      {\n        this.emailNotAccepted=false;\n        this.emailAccepted=true;\n      }\n    });\n  }\n}\n","<div class=\"main\" fxLayout=\"row\">\n  <div class=\"bg-box\" fxFlex=\"60%\" fxLayoutAlign=\"center center\">\n    <img src=\"assets/signup.svg\" width=\"100%\" class=\"animate__animated animate__slideInLeft\">\n  </div>\n  <div class=\"font-box p-4\" fxFlex=\"40%\">\n    <h2 class=\"title-text p-0 m-0\">Build Relation With</h2>\n    <p class=\"desc-text mt-2\">\n      Your Customers\n    </p>\n    <mat-tab-group>\n      <mat-tab label=\"Email Signup\">\n        <form fxLayout=\"column\" [formGroup]=\"emailSignupForm\" (submit)=\"emailSignup()\">\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Fullname</mat-label>\n            <input matInput formControlName=\"fullname\" required=\"required\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Email</mat-label>\n            <input #emailInput matInput formControlName=\"email\" (blur)=\"isUserAlreadyExists(emailInput)\" required=\"required\">\n            <mat-icon color=\"warn\" matSuffix *ngIf=\"emailNotAccepted\">error</mat-icon>\n            <mat-icon color=\"primary\" matSuffix *ngIf=\"emailAccepted\">check_circle</mat-icon>\n            <mat-error *ngIf=\"emailNotAccepted\">User already exists !</mat-error>\n\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput [type]=\"passwordType\" formControlName=\"password\">\n            <mat-icon matSuffix (click)=\"togglePassword()\" *ngIf=\"passwordType=='password'\">visibility</mat-icon>\n            <mat-icon matSuffix (click)=\"togglePassword()\" *ngIf=\"passwordType=='text'\">visibility_off</mat-icon>\n            <mat-error *ngIf=\"website.hasError('required')\">This field is required !</mat-error>\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Phone</mat-label>\n            <input matInput type=\"number\" formControlName=\"phone\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Website</mat-label>\n            <input matInput formControlName=\"website\">\n            <mat-error *ngIf=\"website.hasError('required')\">This field is required !</mat-error>\n            <mat-error *ngIf=\"website.invalid && !website.hasError('required')\">Enter a valid website !</mat-error>\n          </mat-form-field>\n          <mat-checkbox>\n            I accept private policy\n          </mat-checkbox>\n          <button mat-button mat-flat-button color=\"primary\" class=\"py-1 my-4\">\n            Submit\n          </button>\n        </form>\n      </mat-tab>\n      <mat-tab label=\"Phone Signup\">\n        <form fxLayout=\"column\" >\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Fullname</mat-label>\n            <input matInput >\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Phone</mat-label>\n            <input matInput type=\"number\">\n          </mat-form-field>\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Password</mat-label>\n            <input matInput type=\"password\">\n            <mat-icon matSuffix>visibility</mat-icon>\n          </mat-form-field>\n\n          <mat-form-field appearance=\"outline\">\n            <mat-label>Website</mat-label>\n            <input matInput>\n          </mat-form-field>\n          <mat-checkbox>\n            I accept private policy\n          </mat-checkbox>\n          <button mat-button mat-flat-button color=\"primary\" class=\"py-1 my-4\">Submit</button>\n        </form>\n      </mat-tab>\n    </mat-tab-group>\n  </div>\n</div>\n"],"sourceRoot":"webpack:///"}